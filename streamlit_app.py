import streamlit as st
import zipfile
import os
import pandas as pd


st.set_page_config(
    page_title="Avifauna & Clima ‚Äî Dashboard",
    page_icon="üïäÔ∏è",
    layout="wide",
)

st.title("üê¶ Dashboard Avifauna & Variables Clim√°ticas")
st.caption("Explora avistamientos por especie y su relaci√≥n con variables clim√°ticas. Filtra, compara y prepara insumos para tu modelo predictivo.")
st.info('Modelo multivariante para predecir abundancia y diversidad de aves seg√∫n variables clim√°ticas en el campus de la ESPOL ')

import streamlit as st
import pandas as pd
import zipfile
import os
import zipfile
import pandas as pd
import streamlit as st

# ---------------------------------
# Utilidades y carga de datos (cache)
# ---------------------------------
@st.cache_data(show_spinner=True)
def load_data(zip_path: str) -> pd.DataFrame:
    """
    Carga el archivo CSV desde un archivo ZIP en el directorio.
    Utiliza Streamlit cache para optimizar el rendimiento y evitar recargas repetidas.
    """
    try:
        with zipfile.ZipFile(zip_path, "r") as z:
            # Filtrar los archivos CSV dentro del ZIP
            csv_files = [n for n in z.namelist() if n.lower().endswith(".csv")]
            
            # Si no hay archivos CSV dentro del ZIP, mostrar error
            if not csv_files:
                st.error("El ZIP no contiene ning√∫n archivo CSV")
                st.stop()

            # Si hay varios CSV, toma el primero
            csv_name = csv_files[0]
            st.write(f"Leyendo: {csv_name}")  # Opcional, para depuraci√≥n

            # Abrir el archivo CSV y cargarlo en un DataFrame
            with z.open(csv_name) as f:
                df_out = pd.read_csv(f)

        st.success("CSV cargado correctamente")
        return df_out
    
    except Exception as e:
        st.error(f"Ocurri√≥ un error al cargar el archivo ZIP: {str(e)}")
        st.stop()
        
# Llamada de la funci√≥n y muestra de los primeros datos
df_out = load_data("out.zip")  # Aseg√∫rate de que el archivo ZIP est√© en el directorio correcto
st.dataframe(df_out.head())
